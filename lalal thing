local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

if CoreGui:FindFirstChild("LalalCommands") then CoreGui.LalalCommands:Destroy() end
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "LalalCommands"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = CoreGui

local OpenKey = Enum.KeyCode.Backquote

local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.AnchorPoint = Vector2.new(0.5,0)
Frame.Position = UDim2.new(0.5,0,0,0)
Frame.Size = UDim2.new(1,0,0,35)
Frame.BackgroundTransparency = 1
Frame.Visible = false

local CmdBar = Instance.new("TextBox")
CmdBar.Parent = Frame
CmdBar.Size = UDim2.new(1,0,1,0)
CmdBar.BackgroundColor3 = Color3.fromRGB(80,80,80)
CmdBar.BackgroundTransparency = 0.5
CmdBar.TextColor3 = Color3.fromRGB(255,255,255)
CmdBar.PlaceholderText = ";command args"
CmdBar.Font = Enum.Font.Code
CmdBar.TextSize = 18
CmdBar.ClearTextOnFocus = true
CmdBar.BorderSizePixel = 0

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        CmdBar:CaptureFocus()
    end
end)

local Toggle = Instance.new("TextButton")
Toggle.Name = "Toggle"
Toggle.Parent = ScreenGui
Toggle.Size = UDim2.new(0,60,0,30)
Toggle.Position = UDim2.new(0.05,0,0.2,0)
Toggle.BackgroundColor3 = Color3.fromRGB(80,80,80)
Toggle.BackgroundTransparency = 0.5
Toggle.TextColor3 = Color3.fromRGB(255,255,255)
Toggle.Text = "CMD"
Toggle.Font = Enum.Font.Code
Toggle.TextSize = 14
Toggle.Active = true
Toggle.Draggable = true

local function ToggleBar()
    Frame.Visible = not Frame.Visible
    if Frame.Visible then CmdBar:CaptureFocus() else CmdBar:ReleaseFocus() end
end

Toggle.MouseButton1Click:Connect(ToggleBar)
UserInputService.InputBegan:Connect(function(input,gp)
    if not gp and input.KeyCode == OpenKey then ToggleBar() end
end)

local Commands = {}
local CommandsMulti = {}
local CommandAliases = {}

function AddCommand(names, func)
    local primary = names[1]
    for _, n in ipairs(names) do
        Commands[n:lower()] = func
    end
    CommandAliases[primary:lower()] = names
end

function AddCommandMulti(names, func)
    local primary = names[1]
    for _, n in ipairs(names) do
        CommandsMulti[n:lower()] = func
    end
    CommandAliases[primary:lower()] = names
end

local function GetPlayer(partial)
    if not partial then return {} end
    partial = partial:lower()
    if partial == "me" then return {LocalPlayer} end
    if partial == "others" then
        local t = {}
        for _, plr in ipairs(Players:GetPlayers()) do if plr ~= LocalPlayer then table.insert(t, plr) end end
        return t
    end
    if partial == "all" then return Players:GetPlayers() end
    if partial == "random" then
        local others = {}
        for _, plr in ipairs(Players:GetPlayers()) do if plr ~= LocalPlayer then table.insert(others, plr) end end
        if #others > 0 then return {others[math.random(1,#others)]} end
        return {}
    end
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Name:lower():sub(1,#partial) == partial or plr.DisplayName:lower():sub(1,#partial) == partial then
            return {plr}
        end
    end
    return {}
end

local function RunCommand(str)
    local split = string.split(str, " ")
    local cmd = table.remove(split, 1):lower()
    if Commands[cmd] then
        Commands[cmd](unpack(split))
    elseif CommandsMulti[cmd] then
        CommandsMulti[cmd](unpack(split))
    end
end

CmdBar.FocusLost:Connect(function(enter)
    if enter and CmdBar.Text ~= "" then
        RunCommand(CmdBar.Text)
        CmdBar.Text = ""
    end
    Frame.Visible = false
end)

local CmdListFrame = Instance.new("Frame")
CmdListFrame.Name = "LalalCommandsList"
CmdListFrame.Parent = ScreenGui
CmdListFrame.Size = UDim2.new(0.4,0,0.6,0)
CmdListFrame.Position = UDim2.new(0.5,0,0.5,0)
CmdListFrame.AnchorPoint = Vector2.new(0.5,0.5)
CmdListFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)
CmdListFrame.BackgroundTransparency = 0.5
CmdListFrame.Visible = false
CmdListFrame.Active = true
CmdListFrame.Draggable = true

local SearchBar = Instance.new("TextBox")
SearchBar.Parent = CmdListFrame
SearchBar.Size = UDim2.new(1,-40,0,30)
SearchBar.Position = UDim2.new(0,5,0,5)
SearchBar.BackgroundColor3 = Color3.fromRGB(70,70,70)
SearchBar.BackgroundTransparency = 0.3
SearchBar.Text = ""
SearchBar.TextColor3 = Color3.fromRGB(255,255,255)
SearchBar.PlaceholderText = "Search commands..."
SearchBar.Font = Enum.Font.Code
SearchBar.TextSize = 16
SearchBar.ClearTextOnFocus = false
SearchBar.BorderSizePixel = 0

local Close = Instance.new("TextButton")
Close.Parent = CmdListFrame
Close.Size = UDim2.new(0,30,0,30)
Close.Position = UDim2.new(1,-35,0,5)
Close.Text = "X"
Close.BackgroundColor3 = Color3.fromRGB(200,50,50)
Close.TextColor3 = Color3.fromRGB(255,255,255)
Close.Font = Enum.Font.Code
Close.TextSize = 18
Close.BorderSizePixel = 0
Close.MouseButton1Click:Connect(function() CmdListFrame.Visible = false end)

local ListFrame = Instance.new("ScrollingFrame")
ListFrame.Parent = CmdListFrame
ListFrame.Position = UDim2.new(0,5,0,40)
ListFrame.Size = UDim2.new(1,-10,1,-45)
ListFrame.BackgroundTransparency = 1
ListFrame.CanvasSize = UDim2.new(0,0,0,0)
ListFrame.ScrollBarThickness = 6

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = ListFrame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0,2)

local function ShowCommands()
    for _, c in ipairs(ListFrame:GetChildren()) do if c:IsA("TextLabel") then c:Destroy() end end
    local index = 1
    for primary, aliases in pairs(CommandAliases) do
        local lbl = Instance.new("TextLabel")
        lbl.Size = UDim2.new(1,0,0,20)
        lbl.BackgroundTransparency = 1
        lbl.TextColor3 = Color3.fromRGB(255,255,255)
        lbl.Font = Enum.Font.Code
        lbl.TextSize = 16
        lbl.TextXAlignment = Enum.TextXAlignment.Left
        lbl.TextYAlignment = Enum.TextYAlignment.Top
        lbl.LayoutOrder = index
        lbl.TextWrapped = true
        lbl.AutomaticSize = Enum.AutomaticSize.Y
        lbl.Text = primary.." ("..table.concat(aliases,", ")..")"
        lbl.Parent = ListFrame
        index = index + 1
    end
    UIListLayout:ApplyLayout()
    ListFrame.CanvasSize = UDim2.new(0,0,0,index*22)
    CmdListFrame.Visible = true
end

SearchBar:GetPropertyChangedSignal("Text"):Connect(function()
    local search = SearchBar.Text:lower()
    for _,lbl in ipairs(ListFrame:GetChildren()) do
        if lbl:IsA("TextLabel") then lbl.Visible = lbl.Text:lower():find(search) ~= nil end
    end
end)

local NotificationFolder = Instance.new("Folder")
NotificationFolder.Name = "Notifications"
NotificationFolder.Parent = ScreenGui

local function Notification(text,duration)
    duration = duration or 5
    local notif = Instance.new("Frame")
    notif.Size = UDim2.new(0,250,0,50)
    notif.Position = UDim2.new(1,-10,1,-10 - (#NotificationFolder:GetChildren())*60)
    notif.AnchorPoint = Vector2.new(1,1)
    notif.BackgroundColor3 = Color3.fromRGB(50,50,50)
    notif.BackgroundTransparency = 0.2
    notif.Parent = NotificationFolder

    local txt = Instance.new("TextLabel")
    txt.Size = UDim2.new(1,0,1,0)
    txt.BackgroundTransparency = 1
    txt.TextColor3 = Color3.fromRGB(255,255,255)
    txt.Font = Enum.Font.Code
    txt.TextSize = 16
    txt.TextWrapped = true
    txt.Text = text
    txt.Parent = notif

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0,8)
    uiCorner.Parent = notif

    local tweenIn = TweenService:Create(notif,TweenInfo.new(0.5,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Position = UDim2.new(1,-10,1,-10 - (#NotificationFolder:GetChildren()-1)*60)})
    tweenIn:Play()

    task.delay(duration,function()
        local tweenOut = TweenService:Create(notif,TweenInfo.new(0.5,Enum.EasingStyle.Quad,Enum.EasingDirection.In),{Position = notif.Position + UDim2.new(0,0,0,50),BackgroundTransparency = 1})
        tweenOut:Play()
        tweenOut.Completed:Connect(function() notif:Destroy() end)
    end)
end

local CoreReplication = game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication")

local function Delete(path)
    CoreReplication:FireServer("Tools", "Remove", path)
end

AddCommand({"commands","cmds"},function()
    ShowCommands()
end)

AddCommand({"setkey"},function(keyName)
    local key = Enum.KeyCode[keyName]
    if key then
        OpenKey = key
    end
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreReplication = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication")

local DefaultSpeed = {
    Walk_Speed = 16,
    Run_Speed = 26,
    Reverse_Walk_Speed = 11,
    Crouch_Speed = 12,
    Crawl_Speed = 10
}

AddCommandMulti({"walkspeed","speed","ws"}, function(name, value)
    if not name or not value then return end
    value = tonumber(value)
    if not value then return end
    local targets = GetPlayer(name)
    for _, plr in ipairs(targets) do
        local char = plr.Character
        if char and char:FindFirstChild("Character_Settings") and char.Character_Settings:FindFirstChild("Animator") then
            for speedType,_ in pairs(DefaultSpeed) do
                local args = {
                    "Change_Book_Color",
                    char.Character_Settings.Animator,
                    speedType,
                    value,
                    LocalPlayer,
                    {Color3.fromRGB(0,0,0), Color3.fromRGB(0,0,0)}
                }
                CoreReplication:FireServer(unpack(args))
            end
        end
    end
end)

AddCommandMulti({"restoreswalkpeed", "restorespeed", "restorews"}, function(name)
    if not name then return end
    local targets = GetPlayer(name)
    for _, plr in ipairs(targets) do
        local char = plr.Character
        if char and char:FindFirstChild("Character_Settings") and char.Character_Settings:FindFirstChild("Animator") then
            for speedType, defaultValue in pairs(DefaultSpeed) do
                local args = {
                    "Change_Book_Color",
                    char.Character_Settings.Animator,
                    speedType,
                    defaultValue,
                    LocalPlayer,
                    {Color3.fromRGB(0,0,0), Color3.fromRGB(0,0,0)}
                }
                CoreReplication:FireServer(unpack(args))
            end
        end
    end
end)

AddCommand({"roleplayname","rpname"}, function(targetArg, ...)
    local text = table.concat({...}," ")
    if text == "" then return end
    for _, plr in ipairs(GetPlayer(targetArg)) do
        local char = plr.Character
        if char then
            local head = char:FindFirstChild("Head")
            if head then
                local nametag = head:FindFirstChild("Nametag")
                if nametag then
                    local rpObj = nametag:FindFirstChild("Roleplay_Name")
                    if rpObj then
                        CoreReplication:FireServer("Text","Set",rpObj,text,"Roleplay_Name")
                    end
                end
            end
        end
    end
end)

AddCommand({"bio"}, function(targetArg, ...)
    local text = table.concat({...}, " ")
    if not targetArg or text == "" then return end
    for _, plr in ipairs(GetPlayer(targetArg)) do
        local char = plr.Character
        if char then
            local head = char:FindFirstChild("Head")
            if head then
                local nametag = head:FindFirstChild("Nametag")
                if nametag then
                    local bio = nametag:FindFirstChild("Biography")
                    if bio then
                        CoreReplication:FireServer("Text","Set",bio,text,"Biography")
                    end
                end
            end
        end
    end
end)

AddCommand({"role"}, function(...)
    local args = {...}
    local targetArg = args[1]
    if not targetArg then return end
    local text = table.concat(args, " ", 2)
    if text == "" then return end
    for _, plr in ipairs(GetPlayer(targetArg)) do
        local char = plr.Character
        if char then
            local head = char:FindFirstChild("Head")
            if head then
                local nametag = head:FindFirstChild("Nametag")
                if nametag then
                    local roleObj = nametag:FindFirstChild("Role")
                    if roleObj then
                        CoreReplication:FireServer("Text","Set",roleObj,text,"Role")
                        local args2 = {
                            "Change_Book_Color",
                            plr:FindFirstChild("Player_Settings"),
                            "Role",
                            text,
                            game.Players.LocalPlayer,
                            {
                                Color3.fromRGB(0,0,0),
                                Color3.fromRGB(0,0,0)
                            }
                        }
                        CoreReplication:FireServer(unpack(args2))
                    end
                end
            end
        end
    end
end)

AddCommand({"customtag"}, function(...)
    local args = {...}
    local plrName = args[1]
    local textObj = workspace["INSIDE MAP"].Alice_Door.Door.Decor.Exit_Sign.Text.SurfaceGui.TextLabel

    for _, plr in ipairs(GetPlayer(plrName)) do
        local head = plr.Character and plr.Character:FindFirstChild("Head")
        local nametag = head and head:FindFirstChild("Nametag")
        if nametag then
            game:GetService("ReplicatedStorage").Events.Core_Replication:FireServer(
                "Tools",
                "Add",
                textObj,
                nametag
            )
        end
    end
end)

AddCommand({"removecustomtag"}, function(targetName)
    if not targetName then return end
    local Players = game:GetService("Players")
    for _, plr in ipairs(GetPlayer(targetName)) do
        if plr and plr.Character and plr.Character:FindFirstChild("Head") then
            local head = plr.Character.Head
            local nametag = head:FindFirstChild("Nametag")
            if nametag and nametag:FindFirstChild("TextLabel") then
                Delete(nametag.TextLabel)
            end
        end
    end
end)

AddCommand({"customtagtext"}, function(...)
    local args = {...}
    local plrName = args[1]
    local text = table.concat(args, " ", 2)

    for _, plr in ipairs(GetPlayer(plrName)) do
        local head = plr.Character and plr.Character:FindFirstChild("Head")
        local label = head and head:FindFirstChild("Nametag") and head.Nametag:FindFirstChild("TextLabel")
        if label then
            game:GetService("ReplicatedStorage").Events.Core_Replication:FireServer(
                "Text",
                "Set",
                label,
                text,
                "Roleplay_Name"
            )
        end
    end
end)

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local CoreReplication = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication")

local RGB_Connection
local RGBBioConnection

AddCommand({"rgbname"}, function()
    if RGB_Connection then return end
    local player = Players.LocalPlayer
    local head = player.Character and player.Character:FindFirstChild("Head") or player.CharacterAdded:Wait():WaitForChild("Head")
    local roleName = head:WaitForChild("Nametag"):WaitForChild("Roleplay_Name")
    local hue = 0
    RGB_Connection = RunService.RenderStepped:Connect(function()
        hue = (hue + 0.01) % 1
        local color = Color3.fromHSV(hue, 1, 1)
        CoreReplication:FireServer("Text","Change_Color",roleName,color,"Role_Color")
    end)
end)

AddCommand({"rgbbio"}, function()
    if RGBBioConnection then return end
    local player = Players.LocalPlayer
    local head = player.Character and player.Character:FindFirstChild("Head") or player.CharacterAdded:Wait():WaitForChild("Head")
    local biography = head:WaitForChild("Nametag"):WaitForChild("Biography")
    local hue = 0
    RGBBioConnection = RunService.RenderStepped:Connect(function()
        hue = (hue + 0.01) % 1
        local color = Color3.fromHSV(hue, 1, 1)
        CoreReplication:FireServer("Text","Change_Color",biography,color,"Bio_Color")
    end)
end)

AddCommand({"unrgbname"}, function()
    if RGB_Connection then
        RGB_Connection:Disconnect()
        RGB_Connection = nil
    end
end)

AddCommand({"unrgbbio"}, function()
    if RGBBioConnection then
        RGBBioConnection:Disconnect()
        RGBBioConnection = nil
    end
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreReplication = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication")
local RunService = game:GetService("RunService")

local Zalgo = {"̍","̎","̄","̅","̿","͒","͗","͑","̇","̈","̃","̂","̌","͐","̀","́","̋","̏"}
local ZalgoConnection
local OriginalText

local function ZalgoText(text)
	local out = ""
	for i = 1, #text do
		local ch = text:sub(i,i)
		local glitch = ch
		for _ = 1, math.random(25,40) do
			glitch ..= Zalgo[math.random(1,#Zalgo)]
		end
		out ..= glitch
	end
	return out
end

local function StartZalgo()
	if ZalgoConnection then ZalgoConnection:Disconnect() end

	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local head = character:WaitForChild("Head")
	local nametag = head:WaitForChild("Nametag")
	local RoleplayName = nametag:WaitForChild("Roleplay_Name")
	OriginalText = RoleplayName.Text

	ZalgoConnection = RunService.Heartbeat:Connect(function()
		if RoleplayName and RoleplayName.Parent then
			CoreReplication:FireServer("Text","Set",RoleplayName,ZalgoText(OriginalText),"Roleplay_Name")
		end
	end)
end

local function StopZalgo()
	if ZalgoConnection then
		ZalgoConnection:Disconnect()
		ZalgoConnection = nil
	end
	if OriginalText then
		local character = LocalPlayer.Character
		if character then
			local head = character:FindFirstChild("Head")
			if head then
				local nametag = head:FindFirstChild("Nametag")
				if nametag then
					local RoleplayName = nametag:FindFirstChild("Roleplay_Name")
					if RoleplayName then
						CoreReplication:FireServer("Text","Set",RoleplayName,OriginalText,"Roleplay_Name")
					end
				end
			end
		end
	end
end

AddCommand({"zalgotext"}, function()
	StartZalgo()
end)

AddCommand({"unzalgotext"}, function()
	StopZalgo()
end)

AddCommandMulti({"announce"}, function(...)
    local msg = table.concat({...}, " ")
    if msg == "" then return end
    local args = {
        "Change_Book_Color",
        game:GetService("ReplicatedStorage").Game_Info,
        "Current_Class",
        msg,
        game.Players.LocalPlayer,
        {Color3.fromRGB(0,0,0), Color3.fromRGB(0,0,0)}
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
end)

AddCommandMulti({"stateclass"}, function(...)
    local msg = table.concat({...}, " ")
    if msg == "" then return end
    local args = {
        "Change_Book_Color",
        game:GetService("ReplicatedStorage").Game_Info,
        "Class_State",
        msg,
        game.Players.LocalPlayer,
        {Color3.fromRGB(0,0,0), Color3.fromRGB(0,0,0)}
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
end)

AddCommand({"zalgoannounce"}, function(...)
    local args = {...}
    if #args == 0 then return end
    local text = table.concat(args, " ")
    
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local CoreReplication = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication")

    local zalgo_up = { "̍","̎","̄","̅","̿","̑","̆","̐","͒","͗","͑","̇","̈","̊","͂","̓","̈","͊","͋","͌","̃","̂","̌","͐" }
    local zalgo_down = { "̖","̗","̘","̙","̜","̝","̞","̟","̠","̤","̥","̦","̩","̪","̫","̬","̭","̮","̯","̰","̱","̲","̳","̹","̺","̻","̼","ͅ","͇","͈","͉","͍","͎","͓","͔","͕","͖","͙","͚","̣" }

    local function Zalgo(txt, intensity)
        local out = ""
        for i = 1, #txt do
            local c = txt:sub(i,i)
            out = out .. c
            for _ = 1, intensity do
                out = out .. zalgo_up[math.random(1, #zalgo_up)]
            end
            for _ = 1, intensity do
                out = out .. zalgo_down[math.random(1, #zalgo_down)]
            end
        end
        return out
    end

    CoreReplication:FireServer(
        "Change_Book_Color",
        ReplicatedStorage.Game_Info,
        "Current_Class",
        Zalgo(text, 70)
    )
end)

AddCommandMulti({"settext"}, function(...)
    local text = table.concat({...}, " ")
    if text == "" then return end

    local CoreReplication = game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication")

    local folders = {
        "Classes",
        "Teleports",
        "Seats",
        "Regions",
        "Reactors",
        "Players",
        "Morphs",
        "Map",
        "Lobby",
        "INSIDE MAP",
        "Doors"
    }

    for _, folderName in ipairs(folders) do
        local folder = workspace:FindFirstChild(folderName)
        if folder then
            for _, obj in ipairs(folder:GetDescendants()) do
                if obj:IsA("TextLabel") then
                    local args = {
                        "Text",
                        "Set",
                        obj,
                        text,
                        "Roleplay_Name"
                    }
                    CoreReplication:FireServer(unpack(args))
                end
            end
        end
    end
end)

AddCommand({"removeschool"}, function()
    local args = {
        "Tools",
        "Remove",
        game.Workspace["INSIDE MAP"]
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
end)

AddCommand({"breakmorphs"}, function()
    Delete(game:GetService("ReplicatedStorage").Characters)
end)

AddCommand({"breakgame"}, function()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local CoreReplication = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication")

    for _, item in pairs(ReplicatedStorage:GetChildren()) do
        if item.Name ~= "Events" then
            local args = {
                "Tools",
                "Remove",
                item
            }
            CoreReplication:FireServer(unpack(args))
        end
    end

    local RPName = "HACKED BY LALAL"
    local Bio = "Welcome to the realm of Lalal"
    local Role = "get rekt niggers"

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local character = player.Character
            if character then
                local head = character:FindFirstChild("Head")
                if head then
                    local nametag = head:FindFirstChild("Nametag")
                    if nametag then
                        local rpNameObj = nametag:FindFirstChild("Roleplay_Name")
                        local bioObj = nametag:FindFirstChild("Biography")
                        local roleObj = nametag:FindFirstChild("Role")

                        if rpNameObj and rpNameObj:IsA("TextLabel") and rpNameObj.Text ~= RPName then
                            CoreReplication:FireServer("Text", "Set", rpNameObj, RPName, "Roleplay_Name")
                        end
                        if bioObj and bioObj:IsA("TextLabel") and bioObj.Text ~= Bio then
                            CoreReplication:FireServer("Text", "Set", bioObj, Bio, "Biography")
                        end
                        if roleObj and roleObj:IsA("TextLabel") and roleObj.Text ~= Role then
                            CoreReplication:FireServer("Text", "Set", roleObj, Role, "Role")
                        end
                    end
                end
            end
        end
    end

    local args = {
        "Tools",
        "Remove",
        ReplicatedStorage:WaitForChild("Events")
    }
    CoreReplication:FireServer(unpack(args))
end)

AddCommand({"decalspamtshirt"}, function(targetName)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local CoreReplication = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication")

    for _, plr in ipairs(GetPlayer(targetName)) do
        if plr and plr.Character then
            local Torso = plr.Character:FindFirstChild("Torso")
            local Decal = Torso and Torso:FindFirstChild("roblox")
            if Decal then
                for _, folderName in ipairs({"Classes","Teleports","Seats","Regions","Reactors","Players","Morphs","Map","Lobby","INSIDE MAP","Doors"}) do
                    local folder = workspace:FindFirstChild(folderName)
                    if folder then
                        for _, part in ipairs(folder:GetDescendants()) do
                            if part:IsA("BasePart") then
                                CoreReplication:FireServer("Tools","Add",Decal,part)
                            end
                        end
                    end
                    task.wait(1)
                end
            end
        end
    end
end)

AddCommand({"loadingtext","loadtext"}, function(...)
    local text = table.concat({...}," ")
    local args = {
        "Text",
        "Set",
        game:GetService("StarterGui").Intro.Main.Loading_Screen.Main.Loading_Text,
        text,
        "Roleplay_Name"
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
end)

AddCommand({"kill"}, function(name)
    for _,target in ipairs(GetPlayer(name)) do
        if target and target.Character then
            pcall(function()
                local args1 = {"Death", target.Character, target.Character:WaitForChild("Character_Settings")}
                CoreReplication:FireServer(unpack(args1))
                local args2 = {"Change_Book_Color", target.Character.Character_Settings, "Ragdoll", true, game:GetService("Players").LocalPlayer, {Color3.fromRGB(0,0,0), Color3.fromRGB(0,0,0)}}
                CoreReplication:FireServer(unpack(args2))
            end)
        end
    end
end)

AddCommand({"kill2"}, function(name)
    for _,target in ipairs(GetPlayer(name)) do
        if target and target.Character then
            pcall(function()
                local hum = target.Character:FindFirstChild("Humanoid")
                if hum then Delete(hum) end
            end)
        end
    end
end)

AddCommand({"kill3"}, function(name)
    for _,target in ipairs(GetPlayer(name)) do
        if target and target.Character then
            pcall(function()
                local torso = target.Character:FindFirstChild("Torso") or target.Character:FindFirstChild("UpperTorso")
                if torso then Delete(torso) end
            end)
        end
    end
end)

local Banned = {}

AddCommand({"kick"}, function(name)
    for _,plr in ipairs(GetPlayer(name)) do
        if plr then
            Delete(plr)
        end
    end
end)

AddCommand({"ban"}, function(name)
    for _,plr in ipairs(GetPlayer(name)) do
        if plr then
            Banned[plr.UserId] = true
            Delete(plr)
        end
    end
end)

Players.PlayerAdded:Connect(function(plr)
    if Banned[plr.UserId] then
        Delete(plr)
    end
end)

AddCommand({"punish"}, function(name)
    for _,target in ipairs(GetPlayer(name)) do
        if target and target.Character then
            pcall(function()
                Delete(target.Character)
            end)
        end
    end
end)

AddCommand({"goto","to"}, function(targetName)
    local targets = GetPlayer(targetName)
    if #targets == 0 then return end
    local player = game.Players.LocalPlayer
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    for _, target in ipairs(targets) do
        local targetChar = target.Character or target.CharacterAdded:Wait()
        local targetHrp = targetChar:FindFirstChild("HumanoidRootPart")
        if targetHrp then
            hrp.CFrame = targetHrp.CFrame
        end
    end
end)

AddCommand({"bring"}, function(name)
	local Players = game:GetService("Players")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local Events = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication")
	local ToolsFolder = ReplicatedStorage:WaitForChild("Tools")
	local LocalPlayer = Players.LocalPlayer
	local PaperBallTool = ToolsFolder:WaitForChild("Paper_Ball")
	local LocalChar = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local LocalRightArm = LocalChar:FindFirstChild("Right Arm") or LocalChar:FindFirstChild("RightHand")

	for _, plr in ipairs(GetPlayer(name)) do
		if plr ~= LocalPlayer and plr.Character then
			local TargetChar = plr.Character
			local TargetHumanoid = TargetChar:FindFirstChildWhichIsA("Humanoid")
			local TargetArm = TargetChar:FindFirstChild("Right Arm") or TargetChar:FindFirstChild("RightHand")
			if TargetHumanoid and not TargetHumanoid.Sit and TargetArm then
				Events:FireServer("Tools", "Add", PaperBallTool, LocalChar)
				Events:FireServer("Tools", "Add", PaperBallTool, TargetChar)
				task.wait(0.1)
				local TheirPaperBall = TargetChar:FindFirstChild("Paper_Ball") or TargetChar:WaitForChild("Paper_Ball", 1)
				if TheirPaperBall then
					Events:FireServer("Tools", "Re_Weld", "Add", TheirPaperBall, LocalRightArm)
				end
			end
		end
	end
	task.wait(0.5)
	local function RemoveExtras(player)
		for _, container in ipairs({player.Backpack, player.Character}) do
			if container then
				for _, tool in ipairs(container:GetChildren()) do
					if tool.Name == "Paper_Ball" then
						Events:FireServer("Tools", "Remove", tool)
					end
				end
			end
		end
	end

	for _, plr in ipairs(GetPlayer(name)) do
		RemoveExtras(plr)
	end
	RemoveExtras(LocalPlayer)
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local viewing = nil
local connection

AddCommand({"view"}, function(targetName)
    local targets = GetPlayer(targetName)
    if #targets == 0 then return end
    local target = targets[1]
    viewing = target

    if connection then connection:Disconnect() end
    connection = game:GetService("RunService").RenderStepped:Connect(function()
        if not viewing or not viewing.Character then return end
        local cam = workspace.CurrentCamera
        local hrp = viewing.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            cam.CameraSubject = viewing.Character:FindFirstChildOfClass("Humanoid")
        end
    end)
end)

AddCommand({"unview"}, function()
    viewing = nil
    if connection then
        connection:Disconnect()
        connection = nil
    end
    local cam = workspace.CurrentCamera
    cam.CameraSubject = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
end)

local CoreReplication = game.ReplicatedStorage.Events.Core_Replication

local NormalSpeed = {
    Walk_Speed = 16,
    Run_Speed = 26,
    Reverse_Walk_Speed = 11,
    Crouch_Speed = 12,
    Crawl_Speed = 10
}

local Frozen = {}

local function FreezeCharacter(plr)
    if plr.Character and plr.Character:FindFirstChild("Character_Settings") then
        for SpeedType in pairs(NormalSpeed) do
            CoreReplication:FireServer(
                "Change_Book_Color",
                plr.Character.Character_Settings.Animator,
                SpeedType,
                0,
                game.Players.LocalPlayer,
                {Color3.new(0,0,0), Color3.new(0,0,0)}
            )
        end
    end
end

local function UnfreezeCharacter(plr)
    if plr.Character and plr.Character:FindFirstChild("Character_Settings") then
        for SpeedType, SpeedValue in pairs(NormalSpeed) do
            CoreReplication:FireServer(
                "Change_Book_Color",
                plr.Character.Character_Settings.Animator,
                SpeedType,
                SpeedValue,
                game.Players.LocalPlayer,
                {Color3.new(0,0,0), Color3.new(0,0,0)}
            )
        end
    end
end

local function HookPlayer(plr)
    if not Frozen[plr] then return end
    plr.CharacterAdded:Connect(function()
        task.wait()
        if Frozen[plr] then
            FreezeCharacter(plr)
        end
    end)
end

AddCommand({"freeze"}, function(targetName)
    if not targetName then return end
    for _, plr in ipairs(GetPlayer(targetName)) do
        if plr then
            Frozen[plr] = true
            FreezeCharacter(plr)
            HookPlayer(plr)
        end
    end
end)

AddCommand({"unfreeze"}, function(targetName)
    if not targetName then return end
    for _, plr in ipairs(GetPlayer(targetName)) do
        if plr then
            Frozen[plr] = nil
            UnfreezeCharacter(plr)
        end
    end
end)

AddCommand({"givefastswap"}, function(name)
    for _, target in ipairs(GetPlayer(name)) do
        local args = {
            "Change_Book_Color",
            target.Player_Settings,
            "Has_Fast_Swap",
            true,
            game.Players.LocalPlayer,
            {Color3.fromRGB(0,0,0), Color3.fromRGB(0,0,0)}
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
    end
end)

AddCommand({"removefastswap"}, function(name)
    for _, target in ipairs(GetPlayer(name)) do
        local args = {
            "Change_Book_Color",
            target.Player_Settings,
            "Has_Fast_Swap",
            false,
            game.Players.LocalPlayer,
            {Color3.fromRGB(0,0,0), Color3.fromRGB(0,0,0)}
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
    end
end)

AddCommand({"ragdoll"}, function(name)
    for _, target in ipairs(GetPlayer(name)) do
        local args = {
            "Change_Book_Color",
            target.Character.Character_Settings,
            "Ragdoll",
            true,
            game.Players.LocalPlayer,
            {Color3.fromRGB(0,0,0), Color3.fromRGB(0,0,0)}
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
    end
end)

AddCommand({"unragdoll"}, function(name)
    for _, target in ipairs(GetPlayer(name)) do
        local args = {
            "Change_Book_Color",
            target.Character.Character_Settings,
            "Ragdoll",
            false,
            game.Players.LocalPlayer,
            {Color3.fromRGB(0,0,0), Color3.fromRGB(0,0,0)}
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
    end
end)

local event = game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication")

AddCommand({"day"}, function()
    local args = {
        "Change_Book_Color",
        game:GetService("ReplicatedStorage").Game_Info.Lighting,
        "Daytime",
        "Day",
        game:GetService("Players").LocalPlayer,
        {
            Color3.fromRGB(0, 0, 0),
            Color3.fromRGB(0, 0, 0)
        }
    }
    event:FireServer(unpack(args))
end)

AddCommand({"night"}, function()
    local args = {
        "Change_Book_Color",
        game:GetService("ReplicatedStorage").Game_Info.Lighting,
        "Daytime",
        "Night",
        game:GetService("Players").LocalPlayer,
        {
            Color3.fromRGB(0, 0, 0),
            Color3.fromRGB(0, 0, 0)
        }
    }
    event:FireServer(unpack(args))
end)

AddCommand({"bluelighting"}, function()
for i = 1, 10 do
local args = {
	"Tools",
	"Add",
	game:GetService("Lighting").ColorCorrection,
	game:GetService("Lighting")
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
end
end)

AddCommand({"removebluelighting"}, function()
local Lighting = game:GetService("Lighting")

local corrections = {}
for _, v in ipairs(Lighting:GetChildren()) do
	if v:IsA("ColorCorrectionEffect") then
		table.insert(corrections, v)
	end
end

for i = 2, #corrections do
	Delete(corrections[i])
end
end)

local locked = false

local function KickPlayer(plr)
    if plr ~= LocalPlayer then
        Delete(plr)
    end
end

local PlayerAddedConnection

AddCommand({"lockserver"}, function()
    locked = true
    if PlayerAddedConnection then PlayerAddedConnection:Disconnect() end
    PlayerAddedConnection = Players.PlayerAdded:Connect(function(plr)
        if locked then
            task.wait()
            KickPlayer(plr)
        end
    end)
end)

AddCommand({"unlockserver"}, function()
    locked = false
    if PlayerAddedConnection then
        PlayerAddedConnection:Disconnect()
        PlayerAddedConnection = nil
    end
end)

AddCommandMulti({"morph"}, function(fromName, toName)
    if not fromName or not toName then return end
    local fromPlayers = GetPlayer(fromName)
    local toPlayers = GetPlayer(toName)
    if #fromPlayers == 0 or #toPlayers == 0 then return end

    for _, fromPlayer in ipairs(fromPlayers) do
        local fromChar = fromPlayer.Character or fromPlayer.CharacterAdded:Wait()
        for _, targetPlayer in ipairs(toPlayers) do
            if targetPlayer ~= fromPlayer then
                local targetChar = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
                pcall(function()
                    for _, v in ipairs(targetChar:GetChildren()) do
                        if v:IsA("Accessory") or v:IsA("Shirt") or v:IsA("Pants") or v:IsA("ShirtGraphic") then
                            CoreReplication:FireServer("Tools","Remove",v)
                        end
                    end
                    for _, item in ipairs(fromChar:GetChildren()) do
                        if item:IsA("Accessory") or item:IsA("Shirt") or item:IsA("Pants") or item:IsA("ShirtGraphic") then
                            CoreReplication:FireServer("Tools","Add",item,targetChar)
                        end
                    end
                end)
                task.wait()
            end
        end
    end
end)

AddCommand({"naked"}, function(name)
    for _, target in ipairs(GetPlayer(name)) do
        local char = target.Character
        if char then
            pcall(function()
                for _, item in ipairs(char:GetChildren()) do
                    if item:IsA("Shirt") or item:IsA("Pants") or item:IsA("ShirtGraphic") then
                        Delete(item)
                    end
                end
            end)
        end
    end
end)

AddCommand({"fire"}, function(targetName)
    if not targetName then return end
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local CoreReplication = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication")

    for _, plr in ipairs(GetPlayer(targetName)) do
        if plr and plr.Character then
            for _, part in ipairs(plr.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    CoreReplication:FireServer("Tools","Add",workspace.Map.Outside.Houses.House_1.Inside.Reactors.Fireplace.Fire.Flame,part)
                    CoreReplication:FireServer("Tools","Add",workspace.Map.Outside.Houses.House_1.Inside.Reactors.Fireplace.Fire.Ambience,part)
                    CoreReplication:FireServer("Tools","Add",workspace.Map.Outside.Houses.House_1.Inside.Reactors.Fireplace.Fire.PointLight,part)
                end
            end
        end
    end
end)

AddCommand({"unfire"}, function(targetName)
    if not targetName then return end
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local CoreReplication = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication")

    for _, plr in ipairs(GetPlayer(targetName)) do
        if plr and plr.Character then
            for _, part in ipairs(plr.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    local flames = {"Flame", "Ambience", "PointLight"}
                    for _, flameName in ipairs(flames) do
                        local obj = part:FindFirstChild(flameName)
                        if obj then
                            Delete(obj)
                        end
                    end
                end
            end
        end
    end
end)

AddCommand({"nohead"}, function(name)
    for _, target in ipairs(GetPlayer(name)) do
        local char = target.Character
        if char then
            pcall(function()
                local head = char:FindFirstChild("Head")
                if head then Delete(head) end
            end)
        end
    end
end)

AddCommand({"noarms"}, function(name)
    for _, target in ipairs(GetPlayer(name)) do
        local char = target.Character
        if char then
            pcall(function()
                local r6Arms = {"Left Arm","Right Arm"}
                local r15Arms = {"LeftUpperArm","LeftLowerArm","LeftHand","RightUpperArm","RightLowerArm","RightHand"}
                for _, partName in ipairs(r6Arms) do
                    local part = char:FindFirstChild(partName)
                    if part then Delete(part) end
                end
                for _, partName in ipairs(r15Arms) do
                    local part = char:FindFirstChild(partName)
                    if part then Delete(part) end
                end
            end)
        end
    end
end)

AddCommand({"nolegs"}, function(name)
    for _, target in ipairs(GetPlayer(name)) do
        local char = target.Character
        if char then
            pcall(function()
                for _, partName in ipairs({"Left Leg","Right Leg","LeftLowerLeg","RightLowerLeg","LeftUpperLeg","RightUpperLeg"}) do
                    local part = char:FindFirstChild(partName)
                    if part then Delete(part) end
                end
            end)
        end
    end
end)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Events = ReplicatedStorage:WaitForChild("Events")
local CoreReplication = Events:WaitForChild("Core_Replication")

AddCommand({"whitehighlight"}, function(name)
    for _, plr in ipairs(GetPlayer(name)) do
        if plr and plr.Character then
            CoreReplication:FireServer("Tools", "Add", ReplicatedStorage.Misc.Prompt_Highlighter, plr.Character)
        end
    end
end)

AddCommand({"greenhighlight"}, function(name)
    for _, plr in ipairs(GetPlayer(name)) do
        if plr and plr.Character then
            CoreReplication:FireServer("Tools", "Add", ReplicatedStorage.Misc.Class_Highlighter, plr.Character)
        end
    end
end)

AddCommand({"removehighlight"}, function(name)
    for _, plr in ipairs(GetPlayer(name)) do
        if plr and plr.Character then
            for _, obj in ipairs(plr.Character:GetChildren()) do
                if obj:IsA("Highlight") then
                    Delete(obj)
                end
            end
        end
    end
end)

AddCommand({"matchtool"}, function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local CoreReplication = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication")
    local LocalPlayer = Players.LocalPlayer
    local Mouse = LocalPlayer:GetMouse()
    local UIS = game:GetService("UserInputService")

    local Tool = Instance.new("Tool")
    Tool.Name = "Match"
    Tool.RequiresHandle = false
    Tool.CanBeDropped = false
    Tool.Parent = LocalPlayer.Backpack

    local function ignitePlayer(target)
        if target and target:IsA("BasePart") then
            local character = target:FindFirstAncestorOfClass("Model")
            local targetPlayer = Players:GetPlayerFromCharacter(character)
            if targetPlayer and targetPlayer ~= LocalPlayer then
                local fireParts = {
                    workspace.Map.Outside.Houses.House_1.Inside.Reactors.Fireplace.Fire.Flame,
                    workspace.Map.Outside.Houses.House_1.Inside.Reactors.Fireplace.Fire.Ambience,
                    workspace.Map.Outside.Houses.House_1.Inside.Reactors.Fireplace.Fire.PointLight
                }
                for _, obj in ipairs(fireParts) do
                    CoreReplication:FireServer("Tools", "Add", obj, target)
                end
            end
        end
    end

    Tool.Activated:Connect(function()
        local target = Mouse.Target
        ignitePlayer(target)
    end)

    Tool.Equipped:Connect(function()
        UIS.TouchTap:Connect(function(pos, _)
            local camera = workspace.CurrentCamera
            local unitRay = camera:ScreenPointToRay(pos.X, pos.Y)
            local result = workspace:Raycast(unitRay.Origin, unitRay.Direction * 1000)
            if result then
                ignitePlayer(result.Instance)
            end
        end)
    end)
end)

AddCommand({"destroytool"}, function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local CoreReplication = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication")
    local LocalPlayer = Players.LocalPlayer
    local Mouse = LocalPlayer:GetMouse()
    local UIS = game:GetService("UserInputService")

    local Tool = Instance.new("Tool")
    Tool.Name = "Destroy"
    Tool.RequiresHandle = false
    Tool.CanBeDropped = false
    Tool.Parent = LocalPlayer.Backpack

    local function destroyTarget(target)
        if target and target:IsA("BasePart") then
            local modelAncestor = target:FindFirstAncestorOfClass("Model")
            local owner = Players:GetPlayerFromCharacter(modelAncestor)
            if not owner then
                CoreReplication:FireServer("Tools", "Remove", target)
            end
        end
    end

    Tool.Activated:Connect(function()
        local target = Mouse.Target
        destroyTarget(target)
    end)

    Tool.Equipped:Connect(function()
        UIS.TouchTap:Connect(function(pos, _)
            local camera = workspace.CurrentCamera
            local unitRay = camera:ScreenPointToRay(pos.X, pos.Y)
            local result = workspace:Raycast(unitRay.Origin, unitRay.Direction * 1000)
            if result then
                destroyTarget(result.Instance)
            end
        end)
    end)
end)

AddCommand({"fixmatchtool"}, function()
    local args = {
        "Toggle_Fireplace",
        workspace:WaitForChild("Map"):WaitForChild("Outside"):WaitForChild("Houses"):WaitForChild("House_1"):WaitForChild("Inside"):WaitForChild("Reactors"):WaitForChild("Fireplace"):WaitForChild("Trigger"),
        workspace:WaitForChild("Map"):WaitForChild("Outside"):WaitForChild("Houses"):WaitForChild("House_1"):WaitForChild("Inside"):WaitForChild("Reactors"):WaitForChild("Fireplace"):WaitForChild("Fire"),
        0.5
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
end)

AddCommand({"knifekill"}, function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local LocalPlayer = Players.LocalPlayer
    local Events = ReplicatedStorage:WaitForChild("Events")
    local CoreReplication = Events:WaitForChild("Core_Replication")

    if not getgenv().KnifeKillConnections then getgenv().KnifeKillConnections = {} end

    local function getNearestPlayer(maxDist)
        local character = LocalPlayer.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then return end
        local hrp = character.HumanoidRootPart
        local nearest, dist = nil, maxDist or math.huge
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local d = (hrp.Position - plr.Character.HumanoidRootPart.Position).Magnitude
                if d < dist then
                    dist = d
                    nearest = plr
                end
            end
        end
        return nearest
    end

    local function setupTool(tool)
        if tool.Name ~= "Knife" then return end

        local equipConn, unequipConn, actConn

        equipConn = tool.Equipped:Connect(function()
            actConn = tool.Activated:Connect(function()
                local target = getNearestPlayer(5)
                if target and target.Character and target.Character:FindFirstChild("Humanoid") then
                    CoreReplication:FireServer("Death", target.Character, target.Character:WaitForChild("Character_Settings"))
                    CoreReplication:FireServer("Change_Book_Color", target.Character.Character_Settings, "Ragdoll", true, LocalPlayer, {Color3.fromRGB(0,0,0), Color3.fromRGB(0,0,0)})
                end
            end)
            table.insert(getgenv().KnifeKillConnections, actConn)
        end)

        unequipConn = tool.Unequipped:Connect(function()
            if actConn then
                actConn:Disconnect()
                actConn = nil
            end
        end)

        table.insert(getgenv().KnifeKillConnections, equipConn)
        table.insert(getgenv().KnifeKillConnections, unequipConn)
    end

    local c1 = LocalPlayer.Backpack.ChildAdded:Connect(setupTool)
    table.insert(getgenv().KnifeKillConnections, c1)

    if LocalPlayer.Character then
        for _, t in pairs(LocalPlayer.Character:GetChildren()) do
            if t:IsA("Tool") then setupTool(t) end
        end
    end
end)

AddCommand({"unknifekill"}, function()
    if getgenv().KnifeKillConnections then
        for _, c in pairs(getgenv().KnifeKillConnections) do
            if c.Disconnect then c:Disconnect() end
        end
        getgenv().KnifeKillConnections = {}
    end
end)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local InfiniteItemsThrow

AddCommand({"infiniteitemsthrow", "infitemsthrow"}, function()
    if InfiniteItemsThrow then InfiniteItemsThrow:Disconnect() end
    InfiniteItemsThrow = RunService.RenderStepped:Connect(function()
        local Character = LocalPlayer.Character
        if Character then
            local Tool = Character:FindFirstChildOfClass("Tool")
            if Tool then
                local args = {
                    "Throw_Prop",
                    Tool,
                    160,
                    0.50,
                    4.5
                }
                ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
            end
        end
    end)
end)

AddCommand({"uninfiniteitemsthrow", "uninfitemsthrow"}, function()
    if InfiniteItemsThrow then
        InfiniteItemsThrow:Disconnect()
        InfiniteItemsThrow = nil
    end
end)

AddCommand({"removetools","notools"}, function(targetName)
    if not targetName then return end
    local Players = game:GetService("Players")

    for _, plr in ipairs(GetPlayer(targetName)) do
        if plr then
            for _, container in ipairs({plr.Backpack, plr.Character}) do
                if container then
                    for _, tool in ipairs(container:GetChildren()) do
                        if tool:IsA("Tool") then
                            Delete(tool)
                        end
                    end
                end
            end
        end
    end
end)
